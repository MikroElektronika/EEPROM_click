'
'Example for EEPROM Click
'
'    Date          : Nov 2018.
'    Author        : Nenad Filipovic
'
'Test configuration TIVA :
'    
'    MCU              : TM4C129XNCZAD
'    Dev. Board       : EasyMx PRO v7 for TIVA ARM
'    ARM Compiler ver : v6.0.0.0
'
'---
'
'Description :
'
'The application is composed of three sections :
'
'- System Initialization - Initializes GPIO, I2C and LOG structures
'     and set PWM pin as output.
'- Application Initialization - Initialization driver enable's - I2C
'     and start write log.
'- Application Task - (code snippet) This is a example which demonstrates the use of EEPROM Click board.
'     EEPROM Click communicates with register via I2C protocol
'     by write data to and read data from memory of 24C08 chip on serial EEPROM.
'     Results are being sent to the Usart Terminal where you can track their changes.
'
'
'
program Click_EEPROM_TIVA

include Click_EEPROM_types
include Click_EEPROM_config

dim
    readData as uint8_t 
    counter as uint8_t 
    logText as char[50] 
    
sub procedure systemInit() 

    mikrobus_gpioInit(_MIKROBUS1, _MIKROBUS_PWM_PIN, _GPIO_OUTPUT) 
    mikrobus_i2cInit(_MIKROBUS1, @_EEPROM_I2C_CFG[0]) 
    mikrobus_logInit(_LOG_USBUART_A, 9600) 
    Delay_100ms() 

end sub

sub procedure applicationInit() 

    eeprom_i2cDriverInit(T_EEPROM_P(@_MIKROBUS1_GPIO), T_EEPROM_P(@_MIKROBUS1_I2C), _EEPROM_DEFAULT_I2C_ADDRESS) 
    mikrobus_logWrite("             ----------------", _LOG_LINE) 
    mikrobus_logWrite("               EEPROM Click               ", _LOG_LINE) 
    mikrobus_logWrite("             ----------------", _LOG_LINE) 

end sub

sub procedure applicationTask() 

    mikrobus_logWrite(" Write to memory number from 0 to 255", _LOG_LINE) 
    counter = _EEPROM_START_NUMBER_0
    while (counter < _EEPROM_END_NUMBER_255) 
        eeprom_writeByte(counter, counter) 
        Delay_10ms() 
        inc(counter)
    wend
    mikrobus_logWrite(" Write status: DONE", _LOG_LINE) 
    mikrobus_logWrite("------------------------------------------", _LOG_LINE) 
    mikrobus_logWrite(" Reading from memory :", _LOG_LINE) 
    Delay_1sec() 
    counter = _EEPROM_START_NUMBER_0
    while (counter < _EEPROM_END_NUMBER_255) 
        readData = eeprom_readByte(counter) 
        Delay_10ms() 
        IntToStr(readData, logText) 
        mikrobus_logWrite(logText, _LOG_TEXT) 
        mikrobus_logWrite(" ", _LOG_TEXT) 
        Delay_100ms() 
        inc(counter)
    wend
    mikrobus_logWrite("------------------------------------------", _LOG_LINE) 
    Delay_1sec() 

end sub

main :
    logText[0] = 0

    systemInit() 
    applicationInit() 
    while (1) 
        applicationTask() 
    wend

end.